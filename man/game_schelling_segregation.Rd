% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/game_schelling_segregation.R
\name{game_schelling_segregation}
\alias{game_schelling_segregation}
\title{Simulate Schelling's Segregation Model}
\usage{
game_schelling_segregation(
  grid_size = 25,
  population_density = 0.8,
  group_prop = c(0.5, 0.5),
  minimum_same_prop = 0.3,
  max_time = 100,
  tol = 0.01,
  save_log = FALSE,
  do_plot = FALSE,
  plot_sec = 1,
  save_GIF = FALSE,
  return_G = TRUE,
  movie.name = "schelling_simulation.gif"
)
}
\arguments{
\item{grid_size}{Numeric. The size of the square grid (number of rows and columns).
Must be a positive integer. Default is 25.}

\item{population_density}{Numeric. The proportion of grid cells occupied by agents (0 < population_density <= 1).
Default is 0.8.}

\item{group_prop}{Numeric vector. Proportions of different groups in the population. Must be positive and sum to 1.
Default is \code{c(0.5, 0.5)}. For more than two groups, use \code{c(0.5, 0.25, 0.25)}.}

\item{minimum_same_prop}{Numeric. The minimum proportion of agents of the same group in a neighborhood
required for an agent to be satisfied (0 <= minimum_same_prop <= 1).
Default is 0.3.}

\item{max_time}{Numeric. Maximum number of time steps for the simulation. Must be a positive integer.
Default is 100.}

\item{tol}{Numeric. Tolerance for the change in the proportion of satisfied agents to determine convergence.
Must be non-negative. Default is 0.01. If users just want to run the simulation until \code{max.time}, set this as \code{NA}.}

\item{save_log}{Logical. If \code{TRUE}, saves the state of the simulation at each time step. Default is \code{FALSE}.}

\item{do_plot}{Logical. If \code{TRUE}, generates a plot of the simulation. Defaults to \code{FALSE}.}

\item{plot_sec}{Numeric. Time in seconds for each frame in the animation when \code{play_movie = TRUE}.
Defaults to 1.}

\item{save_GIF}{Logical. If \code{TRUE}, generates an GIF animation of the simulation. Defaults to \code{FALSE}.
Note that \code{save_log} must be \code{TRUE} for \code{save_GIF} to work.}

\item{return_G}{Logical. If \code{TRUE}, returns the final ABM object. Defaults to \code{TRUE}.}

\item{movie.name}{Character. The name of the GIF file to save the animation. Defaults to "schelling_simulation.gif".}
}
\value{
If \code{return_G = TRUE}, returns an ABM object representing the final state of the simulation.
The object contains the following:
\itemize{
\item \code{agent_attr}: A data frame of agent attributes including group and location.
\item \code{setting}: A list of simulation settings and parameters.
\item \code{log}: A log of simulation states (if \code{save_log = TRUE}).
}
}
\description{
This function simulates Schelling's segregation model using an Agent-Based Modeling (ABM) approach.
Agents are relocated based on their neighborhood satisfaction, determined by the proportion of agents
from the same group within their vicinity.
}
\examples{
# Basic simulation (not run due to potential long execution time)
\dontrun{
result <- game_schelling_segregation(grid_size = 25, max_time = 10)
}

# Simulation with logging and plots
\dontrun{
result <- game_schelling_segregation(
  grid_size = 25,
  max_time = 10,
  save_log = TRUE,
  do_plot = TRUE
)
}

# Generate an animation (requires HTML output)
\dontrun{
game_schelling_segregation(
  grid_size = 25,
  max_time = 10,
  save_log = TRUE,
  play_movie = TRUE,
  html_file = "example_simulation.html"
)
}

}
\references{
Schelling, Thomas C. (1971). "Dynamic models of segregation".
The Journal of Mathematical Sociology, 1 (2): 143â€“186.
}
