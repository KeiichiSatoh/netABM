% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neib8.R
\name{neib8}
\alias{neib8}
\title{Extract neighbors from a matrix}
\usage{
neib8(
  mat,
  posit = NULL,
  posit_ind = NULL,
  include_ego = FALSE,
  FUN = NULL,
  ...
)
}
\arguments{
\item{mat}{A numeric matrix from which neighbors will be extracted.}

\item{posit}{A numeric vector representing linear indices of the positions whose
neighbors should be extracted. Either \code{posit} or \code{posit_ind} must be provided.}

\item{posit_ind}{An integer matrix with two columns, where each row specifies the
row and column indices of the positions whose neighbors should be extracted.
Either \code{posit} or \code{posit_ind} must be provided.}

\item{include_ego}{A logical flag indicating whether to include the center cell (ego)
in the output. Default is \code{FALSE}.}

\item{FUN}{An optional function to be applied to the extracted neighbors for each
position. The function must take a numeric vector as input and return a single value
or a modified vector. If \code{NULL}, the raw neighbors are returned.}

\item{...}{Additional arguments to be passed to \code{FUN}.}
}
\value{
A numeric matrix where each row corresponds to the neighbors of a position
specified in \code{posit} or \code{posit_ind}. If \code{FUN} is provided, the result
is a transformed matrix or vector depending on \code{FUN}.
}
\description{
This function extracts the values of the neighboring cells from a given matrix
for specified positions. The neighbors can include or exclude the center cell (ego).
An optional function (\code{FUN}) can be applied to the extracted neighbors.
}
\examples{
mat <- matrix(1:16, nrow = 4)
posit <- c(6, 11)  # Linear indices
neib8(mat, posit, include_ego = TRUE)

# Using posit_ind
posit_ind <- matrix(c(2, 2, 3, 3), ncol = 2, byrow = TRUE)
neib8(mat, posit_ind = posit_ind, include_ego = FALSE)

# Applying a custom function
neib8(mat, posit, include_ego = TRUE, FUN = sum)
}
