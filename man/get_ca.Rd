% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_ca.R
\name{get_ca}
\alias{get_ca}
\title{Get CA Represented By An Attribute}
\usage{
get_ca(which_ca = NULL, by_which_attr = NULL, D = NULL, from_log = FALSE)
}
\arguments{
\item{which_ca}{A name specifying which CA to use from the \code{D}.
The Default is \code{NULL}, resulting in selecting the first CA found by
\code{D$.field_type()} method.}

\item{by_which_attr}{A character of the agent's attribute name.}

\item{D}{A \code{ABM_D} class object set by \code{setABM} function.
The default \code{NULL} will result in selecting the \code{D} object
from the parent.frame, which may be the usual usage.}

\item{from_log}{Should the CA retrieved from \code{log}. Default is \code{FALSE}.}
}
\value{
A matrix or array of a CA or list of them if \code{from_log} is \code{TRUE}.
}
\description{
This function returns a cellular automaton (CA)
in which each cell shows agent's attribute.
}
\details{
CA in \code{D} usually shows the agent ID. This function searches the relevant
agent's attribute and returns a new CA in which each cell is replaced by these
attributes.
}
\examples{
D <- setABM(agent_n = 6, agent_attr = data.frame(sex = c(1,1,1,2,2,2)), ca = 1)
D <- runABM(D = D, save_log = TRUE)
get_ca(which_ca = "ca", by_which_attr = "sex")
get_ca(which_ca = "ca", by_which_attr = "sex", from_log = TRUE)
}
\seealso{
Other ca_tools: 
\code{\link{ca_2d_to_3d}()},
\code{\link{ca_loc}()},
\code{\link{ca_move}()}

Other f_tools: 
\code{\link{ca_2d_to_3d}()},
\code{\link{ca_loc}()},
\code{\link{ca_move}()},
\code{\link{calc_logistic}()},
\code{\link{calc_softmax}()},
\code{\link{f_nothing}()}
}
\concept{ca_tools}
\concept{f_tools}
