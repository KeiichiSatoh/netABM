% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init_ca.R
\name{init_ca}
\alias{init_ca}
\title{Initialize a Cellular Automaton (CA)}
\usage{
init_ca(
  data = 0,
  dim,
  agent_n = NULL,
  byrow = FALSE,
  dimnames = NULL,
  alloc_method = "one"
)
}
\arguments{
\item{data}{The initial value to populate the CA grid. Default is \code{0}.}

\item{dim}{A vector specifying the dimensions of the CA grid.}

\item{agent_n}{The number of agents to place in the CA grid. Default is \code{NULL}.}

\item{byrow}{A logical value indicating whether the matrix should be filled by row. Default is \code{FALSE}.}

\item{dimnames}{A list of character vectors giving the names to the dimensions. Default is \code{NULL}.}

\item{alloc_method}{A string specifying the method for allocating agents.
Options are \code{"one"}, \code{"all"}, and \code{"one_at_least"} (see the details).
Default is \code{"one"}.}
}
\value{
A matrix or an array representing the initialized cellular automaton.
}
\description{
This function creates a matrix or array as Cellular Automaton object
that can be used as an input of \code{setABM}.
}
\details{
This function creates a matrix or an array based on the specified dimensions
and fills it with the given initial data. If \code{agent_n} is provided,
it places agents in the CA grid according to the specified allocation method:
\itemize{
\item \code{"one"}: Each agent is placed in a unique location.
\item \code{"all"}: Agents are randomly assigned to all locations with replacement. In other words, each cell is occupied by one of the agents.
\item \code{"one_at_least"}: Each agent is placed in a unique location first, then remaining locations are filled with agents chosen randomly with replacement.
}
}
\examples{
# Initialize a 3x3 CA grid with default values
init_ca(dim = c(3, 3))

# Initialize a 3x3 CA grid with agents placed using the "one" method
init_ca(dim = c(3, 3), agent_n = 4, alloc_method = "one")
}
\author{
Keiichi Satoh
}
\concept{initialization ca_tools}
